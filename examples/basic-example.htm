<html>
<head>

	<meta charset="UTF-8">

	<!-- fontawesome -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
	<!-- bootstrap -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
	<!-- jquery -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
	<!-- leaflet -->
	<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.css"/>
	<script src="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.js"></script>

	<script src="http://maps.google.com/maps/api/js?v=3&sensor=false"></script>
	<script src="http://rawgit.com/shramov/leaflet-plugins/v1/layer/tile/Google.js"></script>
	<script src="http://rawgit.com/shramov/leaflet-plugins/v1/layer/tile/Bing.js"></script>

	<link rel="stylesheet" href="../src/leaflet-layer-tree-control.css"/>
	<script type="text/javascript" src="../src/leaflet-layer-tree-control.js"></script>
	<script type="text/javascript" src="../src/leaflet-layer-tree-control-wfs-zoom.js"></script>

</head>
<body>
<div style="wdith: 100%; height: 100%;">
	<div id="map1" style="width: 100%; height: 100%;"></div>
</div>
<script type="text/javascript">

	function buildContentFromLayer(layer) {
		var content = "<table>";
		var properties = layer.feature.properties;
		for (var i in properties) {
			content += "<tr><td>" + i + "</td><td>" + properties[i] + "</td></tr>";
		}
		content += "</table>";
		return content;
	}

	var map = L.map("map1");
	map.setView(new L.LatLng(0, 0), 1);

	var tree = [
		{
			code: "root",
			name: "All the Layers",
			active: true,
			selectedByDefault: false,
			openByDefault: true,
			childLayers: [
				{
					code: "base",
					name: "Base layers",
					active: true,
					selectedByDefault: false,
					openByDefault: true,
					childLayers: [
						{
							code: "osm",
							name: "OpenStreetMap",
							active: true,
							selectedByDefault: true,
							openByDefault: true,
							childLayers: [],
							selectType: "MULTIPLE",
							serviceType: "OSM",
							params: {
								url: "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
							}
						},
						{
							code: "topo1-25000",
							name: "Top Base (vector 1:25000, 1:10000)",
							active: true,
							selectedByDefault: false,
							openByDefault: true,
							childLayers: [],
							selectType: "SINGLE",
							serviceType: "WMS",
							params: {
								service: "WMS",
								format: "image/png",
								layers: "Adygeya:Adygeya_topo",
								version: "1.1.1",
								url: "http://geoportal.sovzond.ru:10090/geoserver/gwc/service/wms",
								transparent: "TRUE"
							}
						},
						{
							code: "google",
							name: "Google",
							active: true,
							selectedByDefault: false,
							openByDefault: true,
							childLayers: [],
							selectType: "NONE",
							serviceType: "GOOGLE",
							params: {}
						},
						{
							code: "google_terrain",
							name: "Google Terrain",
							active: true,
							selectedByDefault: false,
							openByDefault: true,
							childLayers: [],
							selectType: "NONE",
							serviceType: "GOOGLE_TERRAIN",
							params: {}
						},
						{
							code: "rtk",
							name: "rtk",
							active: true,
							selectedByDefault: false,
							openByDefault: true,
							selectType: "MULTIPLE",
							serviceType: "WMS",
							params: {
								request: "getMap",
								service: "WMS",
								format: "image/png",
								layers: "rtk:L1622982",
								style: "{\"stroke\":true,\"fillColor\":\"grey\",\"border\":\"cyan\",\"weight\":1,\"opacity\":0.5,\"color\":\"red\",\"dashArray\":\"3\",\"fillOpacity\":0.1}",
								version: "1.1.0",
								url: "http://geoportal.sovzond.ru:10090/geoserver/rtk/wms"
							}
						}
					],
					selectType: "SINGLE",
					serviceType: null,
					params: {}
				},
				{
					code: "overlays",
					name: "Overlays",
					active: true,
					selectedByDefault: false,
					openByDefault: true,
					childLayers: [
						{
							code: "goroda",
							name: "rtk:Goroda",
							active: true,
							selectedByDefault: false,
							openByDefault: true,
							selectType: "MULTIPLE",
							serviceType: "WFS",
							onPopup: function (layer) {
								return buildContentFromLayer(layer);
							},
							params: {
								request: "getFeature",
								service: "WFS",
								typeName: "rtk:STAT_SUBJ",
								style: "{\"stroke\":true,\"fillColor\":\"violet\",\"border\":\"orange\",\"weight\":3,\"opacity\":0.5,\"color\":\"red\",\"dashArray\":\"5\",\"fillOpacity\":0.1}",
								version: "1.0.0",
								outputFormat: "application/json",
								url: "http://geoportal.sovzond.ru:10090/geoserver/rtk/wfs",
								maxFeatures: "3000"
							},
							childLayers: [
								{
									code: "aelectro",
									name: "Adygeya:elektro",
									active: true,
									selectedByDefault: false,
									openByDefault: true,
									selectType: "MULTIPLE",
									serviceType: "WFS",
									onPopup: function (layer) {
										return buildContentFromLayer(layer);
									},
									params: {
										request: "getFeature",
										service: "WFS",
										typeName: "Adygeya:elektro",
										style: "{\"stroke\":true,\"fillColor\":\"green\",\"border\":\"cyan\",\"weight\":3,\"opacity\":0.5,\"color\":\"red\",\"dashArray\":\"3\",\"fillOpacity\":0.1}",
										version: "1.0.0",
										outputFormat: "application/json",
										url: "http://geoportal.sovzond.ru:10090/geoserver/Adygeya/wfs",
										maxFeatures: "3000"
									},
									childLayers: [
										{
											code: "adygea10",
											name: "Adygeya:LAYER10_line",
											active: true,
											selectedByDefault: false,
											openByDefault: true,
											childLayers: [],
											selectType: "MULTIPLE",
											serviceType: "WFS",
											onPopup: function (layer) {
												return buildContentFromLayer(layer);
											},
											params: {
												request: "getFeature",
												service: "WFS",
												typeName: "Adygeya:LAYER10_line",
												style: "{\"stroke\":true,\"fillColor\":\"yellow\",\"border\":\"red\",\"weight\":3,\"opacity\":0.5,\"color\":\"red\",\"dashArray\":\"5\",\"fillOpacity\":0.1}",
												version: "1.0.0",
												outputFormat: "application/json",
												url: "http://geoportal.sovzond.ru:10090/geoserver/Adygeya/wfs",
												maxFeatures: "3000"
											}
										},
										{
											code: "adygeaPrevlik",
											name: "Adygeya:prevlik",
											active: true,
											selectedByDefault: true,
											openByDefault: true,
											childLayers: [],
											selectType: "MULTIPLE",
											serviceType: "WFS",
											onPopup: function (layer) {
												return buildContentFromLayer(layer);
											},
											params: {
												request: "getFeature",
												service: "WFS",
												typeName: "Adygeya:prevlik",
												version: "1.0.0",
												outputFormat: "application/json",
												url: "http://geoportal.sovzond.ru:10090/geoserver/Adygeya/wfs"
											}
										}
									]
								}
							]
						},
						{
							code: "citybuilding-info",
							name: "Urban Planning Information",
							active: true,
							selectedByDefault: false,
							openByDefault: true,
							childLayers: [],
							selectType: "MULTIPLE",
							serviceType: "WFS",
							onPopup: function (layer) {
								return buildContentFromLayer(layer);
							},
							params: {
								request: "getFeature",
								service: "WFS",
								style: "{\"stroke\":true,\"fillColor\":\"violet\",\"border\":\"yellow\",\"weight\":1,\"opacity\":0.5,\"color\":\"red\",\"dashArray\":\"5\",\"fillOpacity\":0.1}",
								typeName: "Adygeya:LAYER10_line",
								version: "1.0.0",
								outputFormat: "application/json",
								url: "http://geoportal.sovzond.ru:10090/geoserver/Adygeya/wfs"
							}
						}
					],
					selectType: "MULTIPLE",
					serviceType: null,
					params: {}
				}
			],
			selectType: "NONE",
			serviceType: null,
			params: {}
		}
	];

	var layerBuilders = {

		BING: function (layerSettings) {
			return new L.BingLayer(layerSettings.params.url);
		},
		GOOGLE: function (layerSettings) {
			return new L.Google();
		},
		GOOGLE_TERRAIN: function (layerSettings) {
			return new L.Google("TERRAIN");
		}

	};

	new L.Control.LayerTreeControl({
		layerTree: tree,
		openByDefault: true,
		layerBuilders: layerBuilders,
		featureBuilders: {
			WFS: {
				zoom: L.Control.LayerTreeControl.WFSZoomFeature
			}
		}
	}).addTo(map);
</script>
</body>
</html>
